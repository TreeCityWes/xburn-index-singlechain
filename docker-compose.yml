version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: ${CHAIN_NAME}-xburn-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ${CHAIN_NAME}_postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - ${CHAIN_NAME}_xburn_network

  indexer:
    build: .
    container_name: ${CHAIN_NAME}-xburn-indexer
    environment:
      - NODE_ENV=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${DB_NAME}
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - RPC_URL=${RPC_URL}
      - CHAIN_ID=${CHAIN_ID}
      - XEN_CONTRACT=${XEN_CONTRACT}
      - XBURN_MINTER_CONTRACT=${XBURN_MINTER_CONTRACT}
      - XBURN_NFT_CONTRACT=${XBURN_NFT_CONTRACT}
      - START_BLOCK=${START_BLOCK}
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - ${CHAIN_NAME}_xburn_network

volumes:
  ${CHAIN_NAME}_postgres_data:
    name: ${CHAIN_NAME}_postgres_data

networks:
  ${CHAIN_NAME}_xburn_network:
    name: ${CHAIN_NAME}_xburn_network
